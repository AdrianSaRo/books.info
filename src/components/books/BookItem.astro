---
import { FOR_SALE } from "../../constants";
import type { Item } from "../../models/Book";
import AverageIcon from "../AverageIcon.astro";
import Badge from "../Badge.astro";
import GooglePlayIcon from "../GooglePlayIcon.astro";
import PagesIcon from "../PagesIcon.astro";

interface Props {
    book: Item;
}

const { book } = Astro.props;
const { volumeInfo, saleInfo, accessInfo } = book;
---

<div class="card rounded-[4px] h-auto w-full mb-8 cursor-pointer">
    <div class="flex flex-col items-center">
        <div class="grid place-content-center p-4 w-full bg-slate-100">
            {
                volumeInfo.imageLinks
                ? <img
                        class="rounded-lg max-w-28 max-h-40 drop-shadow-lg"
                        src={volumeInfo.imageLinks?.thumbnail}
                        alt={volumeInfo.imageLinks?.thumbnail}
                    />
                : <div class="emptyImage grid place-content-center rounded-lg w-24 h-32 drop-shadow-lg bg-slate-300">
                    <p class="rotate-45">Empty image</p>
                </div>
            }
        </div>
        <div class="grid place-content-center p-2">
            <h3 class="text-center text-white font-medium tracking-widest">
                {volumeInfo.title}
            </h3>
            <span class="overflow-hidden whitespace-nowrap text-ellipsis  text-white text-center">
                {
                    volumeInfo.authors && volumeInfo.authors.map((author, index) => (
                        <small>{author}{index < volumeInfo.authors.length - 1 && ", "}</small>
                    ))
                }
            </span>
        </div>
    </div>
    <!-- <div class="details hidden max-w-[70%]">
        <div class="flex gap-3">
            <Badge>
                <PagesIcon />
                <small class="text-white">{volumeInfo.pageCount ?? 0}</small>
            </Badge>
            <Badge>
                <AverageIcon />
                <small class="text-white"
                    >{volumeInfo.averageRating ?? 0} ( {
                        volumeInfo.ratingsCount ?? 0
                    } )</small
                >
            </Badge>
        </div>
        {volumeInfo.description && <p class="mt-2">{volumeInfo.description}</p>}
        {
            saleInfo.saleability === FOR_SALE && (
                <div class="mt-2 flex gap-2">
                    <Badge>
                        <a
                            class="flex items-center gap-2"
                            href={saleInfo.buyLink}
                            target="_blank"
                        >
                            <GooglePlayIcon />
                            {saleInfo.listPrice?.amount &&
                            saleInfo.retailPrice?.amount &&
                            saleInfo.listPrice?.amount -
                                saleInfo.retailPrice?.amount ===
                                0 ? (
                                <small>
                                    {saleInfo.listPrice?.amount}{" "}
                                    {saleInfo.retailPrice?.currencyCode}
                                </small>
                            ) : (
                                <small>
                                    <del>{saleInfo.listPrice?.amount}</del>{" "}
                                    {saleInfo.retailPrice?.amount}{" "}
                                    {saleInfo.retailPrice?.currencyCode}
                                </small>
                            )}
                        </a>
                    </Badge>
                    {accessInfo.epub.acsTokenLink && (
                        <Badge>
                            <a
                                class="flex items-center gap-2"
                                href={accessInfo.epub.acsTokenLink}
                                target="_blank"
                            >
                                <small>EPUB</small>
                            </a>
                        </Badge>
                    )}
                    {accessInfo.pdf.acsTokenLink && (
                        <Badge>
                            <a
                                class="flex items-center gap-2"
                                href={accessInfo.pdf.acsTokenLink}
                                target="_blank"
                            >
                                <small>PDF</small>
                            </a>
                        </Badge>
                    )}
                </div>
            )
        }
    </div> -->
</div>

<style>
    .card {
        background-color: rgba(113, 111, 111, 0.4);
        backdrop-filter: blur(4px);

        animation: reveal linear both;
        animation-timeline: view();
        animation-range: entry 20% cover 30%;
    }

    .card:hover {
        img, .emptyImage {
            animation: zoomIn ease-in both;
            animation-duration: 0.5s;
        }
    }

    @keyframes reveal {
        from {
            opacity: 0;
            translate: 0 50px;
        }

        to {
            opacity: 1;
            translate: 0 0;
        }
    }

    @keyframes zoomIn {
        to {
            scale: 1.1;
        }
    }
</style>
